// Generated by view binder compiler. Do not edit!
package com.data.fzplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.data.fzplayer.R;
import com.data.fzplayer.main.utils.SoundViewModel;
import com.google.android.exoplayer2.ui.PlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView aspectbtn;

  @NonNull
  public final TextView aspecttext;

  @NonNull
  public final ImageView backarrow;

  @NonNull
  public final ConstraintLayout bottomview;

  @NonNull
  public final ConstraintLayout brightcontainer;

  @NonNull
  public final ImageView brighticon;

  @NonNull
  public final TextView brightprogresstext;

  @NonNull
  public final SoundViewModel brightview;

  @NonNull
  public final LinearLayout continuelay;

  @NonNull
  public final TextView continuetextid;

  @NonNull
  public final TextView currentprogress;

  @NonNull
  public final SeekBar dragseek;

  @NonNull
  public final TextView endprogress;

  @NonNull
  public final RelativeLayout headsetview;

  @NonNull
  public final ImageView imageButton;

  @NonNull
  public final ImageView imageButton2;

  @NonNull
  public final ImageView imageButton3;

  @NonNull
  public final ImageView lockbtn;

  @NonNull
  public final RelativeLayout muteview;

  @NonNull
  public final PlayerView player;

  @NonNull
  public final TextView progresstext;

  @NonNull
  public final RelativeLayout rotateview;

  @NonNull
  public final TextView seekdelay;

  @NonNull
  public final LinearLayout seeklay;

  @NonNull
  public final TextView seektime;

  @NonNull
  public final Button speedbtn;

  @NonNull
  public final SeekBar speedseekbar;

  @NonNull
  public final TextView speedtextview;

  @NonNull
  public final RelativeLayout speedview;

  @NonNull
  public final RelativeLayout subtitles;

  @NonNull
  public final ConstraintLayout toolbar;

  @NonNull
  public final RelativeLayout toucher;

  @NonNull
  public final ImageView unlockbtn;

  @NonNull
  public final TextView videotitle;

  @NonNull
  public final ConstraintLayout volumecontainer;

  @NonNull
  public final ImageView volumeicon;

  @NonNull
  public final SoundViewModel volumeview;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull ImageView aspectbtn,
      @NonNull TextView aspecttext, @NonNull ImageView backarrow,
      @NonNull ConstraintLayout bottomview, @NonNull ConstraintLayout brightcontainer,
      @NonNull ImageView brighticon, @NonNull TextView brightprogresstext,
      @NonNull SoundViewModel brightview, @NonNull LinearLayout continuelay,
      @NonNull TextView continuetextid, @NonNull TextView currentprogress,
      @NonNull SeekBar dragseek, @NonNull TextView endprogress, @NonNull RelativeLayout headsetview,
      @NonNull ImageView imageButton, @NonNull ImageView imageButton2,
      @NonNull ImageView imageButton3, @NonNull ImageView lockbtn, @NonNull RelativeLayout muteview,
      @NonNull PlayerView player, @NonNull TextView progresstext,
      @NonNull RelativeLayout rotateview, @NonNull TextView seekdelay,
      @NonNull LinearLayout seeklay, @NonNull TextView seektime, @NonNull Button speedbtn,
      @NonNull SeekBar speedseekbar, @NonNull TextView speedtextview,
      @NonNull RelativeLayout speedview, @NonNull RelativeLayout subtitles,
      @NonNull ConstraintLayout toolbar, @NonNull RelativeLayout toucher,
      @NonNull ImageView unlockbtn, @NonNull TextView videotitle,
      @NonNull ConstraintLayout volumecontainer, @NonNull ImageView volumeicon,
      @NonNull SoundViewModel volumeview) {
    this.rootView = rootView;
    this.aspectbtn = aspectbtn;
    this.aspecttext = aspecttext;
    this.backarrow = backarrow;
    this.bottomview = bottomview;
    this.brightcontainer = brightcontainer;
    this.brighticon = brighticon;
    this.brightprogresstext = brightprogresstext;
    this.brightview = brightview;
    this.continuelay = continuelay;
    this.continuetextid = continuetextid;
    this.currentprogress = currentprogress;
    this.dragseek = dragseek;
    this.endprogress = endprogress;
    this.headsetview = headsetview;
    this.imageButton = imageButton;
    this.imageButton2 = imageButton2;
    this.imageButton3 = imageButton3;
    this.lockbtn = lockbtn;
    this.muteview = muteview;
    this.player = player;
    this.progresstext = progresstext;
    this.rotateview = rotateview;
    this.seekdelay = seekdelay;
    this.seeklay = seeklay;
    this.seektime = seektime;
    this.speedbtn = speedbtn;
    this.speedseekbar = speedseekbar;
    this.speedtextview = speedtextview;
    this.speedview = speedview;
    this.subtitles = subtitles;
    this.toolbar = toolbar;
    this.toucher = toucher;
    this.unlockbtn = unlockbtn;
    this.videotitle = videotitle;
    this.volumecontainer = volumecontainer;
    this.volumeicon = volumeicon;
    this.volumeview = volumeview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aspectbtn;
      ImageView aspectbtn = ViewBindings.findChildViewById(rootView, id);
      if (aspectbtn == null) {
        break missingId;
      }

      id = R.id.aspecttext;
      TextView aspecttext = ViewBindings.findChildViewById(rootView, id);
      if (aspecttext == null) {
        break missingId;
      }

      id = R.id.backarrow;
      ImageView backarrow = ViewBindings.findChildViewById(rootView, id);
      if (backarrow == null) {
        break missingId;
      }

      id = R.id.bottomview;
      ConstraintLayout bottomview = ViewBindings.findChildViewById(rootView, id);
      if (bottomview == null) {
        break missingId;
      }

      id = R.id.brightcontainer;
      ConstraintLayout brightcontainer = ViewBindings.findChildViewById(rootView, id);
      if (brightcontainer == null) {
        break missingId;
      }

      id = R.id.brighticon;
      ImageView brighticon = ViewBindings.findChildViewById(rootView, id);
      if (brighticon == null) {
        break missingId;
      }

      id = R.id.brightprogresstext;
      TextView brightprogresstext = ViewBindings.findChildViewById(rootView, id);
      if (brightprogresstext == null) {
        break missingId;
      }

      id = R.id.brightview;
      SoundViewModel brightview = ViewBindings.findChildViewById(rootView, id);
      if (brightview == null) {
        break missingId;
      }

      id = R.id.continuelay;
      LinearLayout continuelay = ViewBindings.findChildViewById(rootView, id);
      if (continuelay == null) {
        break missingId;
      }

      id = R.id.continuetextid;
      TextView continuetextid = ViewBindings.findChildViewById(rootView, id);
      if (continuetextid == null) {
        break missingId;
      }

      id = R.id.currentprogress;
      TextView currentprogress = ViewBindings.findChildViewById(rootView, id);
      if (currentprogress == null) {
        break missingId;
      }

      id = R.id.dragseek;
      SeekBar dragseek = ViewBindings.findChildViewById(rootView, id);
      if (dragseek == null) {
        break missingId;
      }

      id = R.id.endprogress;
      TextView endprogress = ViewBindings.findChildViewById(rootView, id);
      if (endprogress == null) {
        break missingId;
      }

      id = R.id.headsetview;
      RelativeLayout headsetview = ViewBindings.findChildViewById(rootView, id);
      if (headsetview == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageView imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.imageButton2;
      ImageView imageButton2 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton2 == null) {
        break missingId;
      }

      id = R.id.imageButton3;
      ImageView imageButton3 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton3 == null) {
        break missingId;
      }

      id = R.id.lockbtn;
      ImageView lockbtn = ViewBindings.findChildViewById(rootView, id);
      if (lockbtn == null) {
        break missingId;
      }

      id = R.id.muteview;
      RelativeLayout muteview = ViewBindings.findChildViewById(rootView, id);
      if (muteview == null) {
        break missingId;
      }

      id = R.id.player;
      PlayerView player = ViewBindings.findChildViewById(rootView, id);
      if (player == null) {
        break missingId;
      }

      id = R.id.progresstext;
      TextView progresstext = ViewBindings.findChildViewById(rootView, id);
      if (progresstext == null) {
        break missingId;
      }

      id = R.id.rotateview;
      RelativeLayout rotateview = ViewBindings.findChildViewById(rootView, id);
      if (rotateview == null) {
        break missingId;
      }

      id = R.id.seekdelay;
      TextView seekdelay = ViewBindings.findChildViewById(rootView, id);
      if (seekdelay == null) {
        break missingId;
      }

      id = R.id.seeklay;
      LinearLayout seeklay = ViewBindings.findChildViewById(rootView, id);
      if (seeklay == null) {
        break missingId;
      }

      id = R.id.seektime;
      TextView seektime = ViewBindings.findChildViewById(rootView, id);
      if (seektime == null) {
        break missingId;
      }

      id = R.id.speedbtn;
      Button speedbtn = ViewBindings.findChildViewById(rootView, id);
      if (speedbtn == null) {
        break missingId;
      }

      id = R.id.speedseekbar;
      SeekBar speedseekbar = ViewBindings.findChildViewById(rootView, id);
      if (speedseekbar == null) {
        break missingId;
      }

      id = R.id.speedtextview;
      TextView speedtextview = ViewBindings.findChildViewById(rootView, id);
      if (speedtextview == null) {
        break missingId;
      }

      id = R.id.speedview;
      RelativeLayout speedview = ViewBindings.findChildViewById(rootView, id);
      if (speedview == null) {
        break missingId;
      }

      id = R.id.subtitles;
      RelativeLayout subtitles = ViewBindings.findChildViewById(rootView, id);
      if (subtitles == null) {
        break missingId;
      }

      id = R.id.toolbar;
      ConstraintLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toucher;
      RelativeLayout toucher = ViewBindings.findChildViewById(rootView, id);
      if (toucher == null) {
        break missingId;
      }

      id = R.id.unlockbtn;
      ImageView unlockbtn = ViewBindings.findChildViewById(rootView, id);
      if (unlockbtn == null) {
        break missingId;
      }

      id = R.id.videotitle;
      TextView videotitle = ViewBindings.findChildViewById(rootView, id);
      if (videotitle == null) {
        break missingId;
      }

      id = R.id.volumecontainer;
      ConstraintLayout volumecontainer = ViewBindings.findChildViewById(rootView, id);
      if (volumecontainer == null) {
        break missingId;
      }

      id = R.id.volumeicon;
      ImageView volumeicon = ViewBindings.findChildViewById(rootView, id);
      if (volumeicon == null) {
        break missingId;
      }

      id = R.id.volumeview;
      SoundViewModel volumeview = ViewBindings.findChildViewById(rootView, id);
      if (volumeview == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, aspectbtn, aspecttext, backarrow,
          bottomview, brightcontainer, brighticon, brightprogresstext, brightview, continuelay,
          continuetextid, currentprogress, dragseek, endprogress, headsetview, imageButton,
          imageButton2, imageButton3, lockbtn, muteview, player, progresstext, rotateview,
          seekdelay, seeklay, seektime, speedbtn, speedseekbar, speedtextview, speedview, subtitles,
          toolbar, toucher, unlockbtn, videotitle, volumecontainer, volumeicon, volumeview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
