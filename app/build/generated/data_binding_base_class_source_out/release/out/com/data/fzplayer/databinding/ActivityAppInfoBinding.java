// Generated by view binder compiler. Do not edit!
package com.data.fzplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.data.fzplayer.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAppInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final RelativeLayout appInfoBody;

  @NonNull
  public final Toolbar appInfoHeader;

  @NonNull
  public final TextView appName;

  @NonNull
  public final ImageView appinfoArrowbackbtn;

  @NonNull
  public final ImageView appinfoLogo;

  @NonNull
  public final TextView licenseAppinfo;

  @NonNull
  public final TextView versionAppinfo;

  @NonNull
  public final TextView whatsnew;

  private ActivityAppInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull RelativeLayout appInfoBody,
      @NonNull Toolbar appInfoHeader, @NonNull TextView appName,
      @NonNull ImageView appinfoArrowbackbtn, @NonNull ImageView appinfoLogo,
      @NonNull TextView licenseAppinfo, @NonNull TextView versionAppinfo,
      @NonNull TextView whatsnew) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.appInfoBody = appInfoBody;
    this.appInfoHeader = appInfoHeader;
    this.appName = appName;
    this.appinfoArrowbackbtn = appinfoArrowbackbtn;
    this.appinfoLogo = appinfoLogo;
    this.licenseAppinfo = licenseAppinfo;
    this.versionAppinfo = versionAppinfo;
    this.whatsnew = whatsnew;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAppInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAppInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_app_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAppInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.app_info_body;
      RelativeLayout appInfoBody = ViewBindings.findChildViewById(rootView, id);
      if (appInfoBody == null) {
        break missingId;
      }

      id = R.id.app_info_header;
      Toolbar appInfoHeader = ViewBindings.findChildViewById(rootView, id);
      if (appInfoHeader == null) {
        break missingId;
      }

      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.appinfo_arrowbackbtn;
      ImageView appinfoArrowbackbtn = ViewBindings.findChildViewById(rootView, id);
      if (appinfoArrowbackbtn == null) {
        break missingId;
      }

      id = R.id.appinfo_logo;
      ImageView appinfoLogo = ViewBindings.findChildViewById(rootView, id);
      if (appinfoLogo == null) {
        break missingId;
      }

      id = R.id.license_appinfo;
      TextView licenseAppinfo = ViewBindings.findChildViewById(rootView, id);
      if (licenseAppinfo == null) {
        break missingId;
      }

      id = R.id.version_appinfo;
      TextView versionAppinfo = ViewBindings.findChildViewById(rootView, id);
      if (versionAppinfo == null) {
        break missingId;
      }

      id = R.id.whatsnew;
      TextView whatsnew = ViewBindings.findChildViewById(rootView, id);
      if (whatsnew == null) {
        break missingId;
      }

      return new ActivityAppInfoBinding((ConstraintLayout) rootView, appBarLayout, appInfoBody,
          appInfoHeader, appName, appinfoArrowbackbtn, appinfoLogo, licenseAppinfo, versionAppinfo,
          whatsnew);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
