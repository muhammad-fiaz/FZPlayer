// Generated by view binder compiler. Do not edit!
package com.data.fzplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.data.fzplayer.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGetUrlFromUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button playStreamVideo;

  @NonNull
  public final ImageView streamLogo;

  @NonNull
  public final ImageView streamUrlpageArrowbackbtn;

  @NonNull
  public final Toolbar streamurl;

  @NonNull
  public final EditText urlStream;

  @NonNull
  public final RelativeLayout videostream;

  private ActivityGetUrlFromUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button playStreamVideo,
      @NonNull ImageView streamLogo, @NonNull ImageView streamUrlpageArrowbackbtn,
      @NonNull Toolbar streamurl, @NonNull EditText urlStream,
      @NonNull RelativeLayout videostream) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.playStreamVideo = playStreamVideo;
    this.streamLogo = streamLogo;
    this.streamUrlpageArrowbackbtn = streamUrlpageArrowbackbtn;
    this.streamurl = streamurl;
    this.urlStream = urlStream;
    this.videostream = videostream;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGetUrlFromUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGetUrlFromUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_get_url_from_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGetUrlFromUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.play_stream_video;
      Button playStreamVideo = ViewBindings.findChildViewById(rootView, id);
      if (playStreamVideo == null) {
        break missingId;
      }

      id = R.id.stream_logo;
      ImageView streamLogo = ViewBindings.findChildViewById(rootView, id);
      if (streamLogo == null) {
        break missingId;
      }

      id = R.id.streamUrlpage_arrowbackbtn;
      ImageView streamUrlpageArrowbackbtn = ViewBindings.findChildViewById(rootView, id);
      if (streamUrlpageArrowbackbtn == null) {
        break missingId;
      }

      id = R.id.streamurl;
      Toolbar streamurl = ViewBindings.findChildViewById(rootView, id);
      if (streamurl == null) {
        break missingId;
      }

      id = R.id.url_stream;
      EditText urlStream = ViewBindings.findChildViewById(rootView, id);
      if (urlStream == null) {
        break missingId;
      }

      id = R.id.videostream;
      RelativeLayout videostream = ViewBindings.findChildViewById(rootView, id);
      if (videostream == null) {
        break missingId;
      }

      return new ActivityGetUrlFromUserBinding((ConstraintLayout) rootView, appBarLayout,
          playStreamVideo, streamLogo, streamUrlpageArrowbackbtn, streamurl, urlStream,
          videostream);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
