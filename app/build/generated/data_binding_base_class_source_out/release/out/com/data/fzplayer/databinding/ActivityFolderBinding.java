// Generated by view binder compiler. Do not edit!
package com.data.fzplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.data.fzplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFolderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Toolbar bottombar;

  @NonNull
  public final RecyclerView folderrecyclerview;

  @NonNull
  public final ImageView musiciconbtn;

  @NonNull
  public final TextView mytitle;

  @NonNull
  public final Button recentplay;

  @NonNull
  public final ImageView settings;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final ImageView videostreaming;

  private ActivityFolderBinding(@NonNull ConstraintLayout rootView, @NonNull Toolbar bottombar,
      @NonNull RecyclerView folderrecyclerview, @NonNull ImageView musiciconbtn,
      @NonNull TextView mytitle, @NonNull Button recentplay, @NonNull ImageView settings,
      @NonNull Toolbar toolbar, @NonNull ImageView videostreaming) {
    this.rootView = rootView;
    this.bottombar = bottombar;
    this.folderrecyclerview = folderrecyclerview;
    this.musiciconbtn = musiciconbtn;
    this.mytitle = mytitle;
    this.recentplay = recentplay;
    this.settings = settings;
    this.toolbar = toolbar;
    this.videostreaming = videostreaming;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_folder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottombar;
      Toolbar bottombar = ViewBindings.findChildViewById(rootView, id);
      if (bottombar == null) {
        break missingId;
      }

      id = R.id.folderrecyclerview;
      RecyclerView folderrecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (folderrecyclerview == null) {
        break missingId;
      }

      id = R.id.musiciconbtn;
      ImageView musiciconbtn = ViewBindings.findChildViewById(rootView, id);
      if (musiciconbtn == null) {
        break missingId;
      }

      id = R.id.mytitle;
      TextView mytitle = ViewBindings.findChildViewById(rootView, id);
      if (mytitle == null) {
        break missingId;
      }

      id = R.id.recentplay;
      Button recentplay = ViewBindings.findChildViewById(rootView, id);
      if (recentplay == null) {
        break missingId;
      }

      id = R.id.settings;
      ImageView settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.videostreaming;
      ImageView videostreaming = ViewBindings.findChildViewById(rootView, id);
      if (videostreaming == null) {
        break missingId;
      }

      return new ActivityFolderBinding((ConstraintLayout) rootView, bottombar, folderrecyclerview,
          musiciconbtn, mytitle, recentplay, settings, toolbar, videostreaming);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
